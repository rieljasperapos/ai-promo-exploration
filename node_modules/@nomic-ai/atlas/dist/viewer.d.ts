import { Table } from 'apache-arrow';
import * as Atlas from './global.js';
export declare class AtlasViewer {
    private credentials;
    anonymous: boolean;
    apiLocation: string;
    /**`
     *
     * @param params
     *  An object that corresponds to one of the accepted login methods
     *    Envlogin: Uses the environment variable
     *      must have `useEnvToken: true`
     *    TokenLogin: Uses a bearer token or Nomic API key.
     *      must have `token: string`
     *    AnonUser: No credentials, used for anonymous Viewer
     *
     */
    constructor(params: Atlas.Envlogin);
    constructor(params: Atlas.ApiKeyLogin);
    constructor(params: Atlas.BearerTokenLogin);
    constructor(params: Atlas.AnonViewerLogin);
    /**
     * Call the API and return the results as deserialized JSON
     * or Arrow.
     *
     * @param endpoint The nomic API endpoint to call. If it doesn't begin with a slash, it will be added.
     * @param method POST or GET
     * @param payload The binary or JSON payload sent with the request.
     * @param headers Additional headers to send with the request
     * @returns
     */
    apiCall(endpoint: string, method?: 'GET' | 'POST', payload?: Atlas.Payload, headers?: null | Record<string, string>, options?: Atlas.ApiCallOptions): Promise<Record<string, any> | string | Array<any> | Table | Uint8Array | null>;
}
export declare class APIError extends Error {
    status: number;
    statusText: string;
    headers: any;
    responseBody: string | null;
    constructor(status: number, statusText: string, headers: any, responseBody?: string);
}
